// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RCData.proto
// Protobuf Java Version: 4.26.1

package cyberrc;

public final class RCDataOuterClass {
  private RCDataOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      RCDataOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CyberRCMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cyberrc.CyberRCMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.cyberrc.CyberRCMessage.MessageType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.cyberrc.CyberRCMessage.MessageType type = 1;</code>
     * @return The type.
     */
    cyberrc.RCDataOuterClass.CyberRCMessage.MessageType getType();

    /**
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();
  }
  /**
   * <pre>
   * Message wrapper
   * </pre>
   *
   * Protobuf type {@code cyberrc.CyberRCMessage}
   */
  public static final class CyberRCMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cyberrc.CyberRCMessage)
      CyberRCMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        CyberRCMessage.class.getName());
    }
    // Use CyberRCMessage.newBuilder() to construct.
    private CyberRCMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CyberRCMessage() {
      type_ = 0;
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cyberrc.RCDataOuterClass.internal_static_cyberrc_CyberRCMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cyberrc.RCDataOuterClass.internal_static_cyberrc_CyberRCMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cyberrc.RCDataOuterClass.CyberRCMessage.class, cyberrc.RCDataOuterClass.CyberRCMessage.Builder.class);
    }

    /**
     * Protobuf enum {@code cyberrc.CyberRCMessage.MessageType}
     */
    public enum MessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PPMUpdate = 0;</code>
       */
      PPMUpdate(0),
      /**
       * <code>RCData = 1;</code>
       */
      RCData(1),
      UNRECOGNIZED(-1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          MessageType.class.getName());
      }
      /**
       * <code>PPMUpdate = 0;</code>
       */
      public static final int PPMUpdate_VALUE = 0;
      /**
       * <code>RCData = 1;</code>
       */
      public static final int RCData_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MessageType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static MessageType forNumber(int value) {
        switch (value) {
          case 0: return PPMUpdate;
          case 1: return RCData;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MessageType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return cyberrc.RCDataOuterClass.CyberRCMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final MessageType[] VALUES = values();

      public static MessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MessageType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:cyberrc.CyberRCMessage.MessageType)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <code>.cyberrc.CyberRCMessage.MessageType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.cyberrc.CyberRCMessage.MessageType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public cyberrc.RCDataOuterClass.CyberRCMessage.MessageType getType() {
      cyberrc.RCDataOuterClass.CyberRCMessage.MessageType result = cyberrc.RCDataOuterClass.CyberRCMessage.MessageType.forNumber(type_);
      return result == null ? cyberrc.RCDataOuterClass.CyberRCMessage.MessageType.UNRECOGNIZED : result;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != cyberrc.RCDataOuterClass.CyberRCMessage.MessageType.PPMUpdate.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!payload_.isEmpty()) {
        output.writeBytes(2, payload_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != cyberrc.RCDataOuterClass.CyberRCMessage.MessageType.PPMUpdate.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!payload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, payload_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cyberrc.RCDataOuterClass.CyberRCMessage)) {
        return super.equals(obj);
      }
      cyberrc.RCDataOuterClass.CyberRCMessage other = (cyberrc.RCDataOuterClass.CyberRCMessage) obj;

      if (type_ != other.type_) return false;
      if (!getPayload()
          .equals(other.getPayload())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cyberrc.RCDataOuterClass.CyberRCMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cyberrc.RCDataOuterClass.CyberRCMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.CyberRCMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cyberrc.RCDataOuterClass.CyberRCMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.CyberRCMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cyberrc.RCDataOuterClass.CyberRCMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.CyberRCMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cyberrc.RCDataOuterClass.CyberRCMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cyberrc.RCDataOuterClass.CyberRCMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cyberrc.RCDataOuterClass.CyberRCMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.CyberRCMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cyberrc.RCDataOuterClass.CyberRCMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cyberrc.RCDataOuterClass.CyberRCMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message wrapper
     * </pre>
     *
     * Protobuf type {@code cyberrc.CyberRCMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cyberrc.CyberRCMessage)
        cyberrc.RCDataOuterClass.CyberRCMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cyberrc.RCDataOuterClass.internal_static_cyberrc_CyberRCMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cyberrc.RCDataOuterClass.internal_static_cyberrc_CyberRCMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cyberrc.RCDataOuterClass.CyberRCMessage.class, cyberrc.RCDataOuterClass.CyberRCMessage.Builder.class);
      }

      // Construct using cyberrc.RCDataOuterClass.CyberRCMessage.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        payload_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cyberrc.RCDataOuterClass.internal_static_cyberrc_CyberRCMessage_descriptor;
      }

      @java.lang.Override
      public cyberrc.RCDataOuterClass.CyberRCMessage getDefaultInstanceForType() {
        return cyberrc.RCDataOuterClass.CyberRCMessage.getDefaultInstance();
      }

      @java.lang.Override
      public cyberrc.RCDataOuterClass.CyberRCMessage build() {
        cyberrc.RCDataOuterClass.CyberRCMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cyberrc.RCDataOuterClass.CyberRCMessage buildPartial() {
        cyberrc.RCDataOuterClass.CyberRCMessage result = new cyberrc.RCDataOuterClass.CyberRCMessage(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(cyberrc.RCDataOuterClass.CyberRCMessage result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.payload_ = payload_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cyberrc.RCDataOuterClass.CyberRCMessage) {
          return mergeFrom((cyberrc.RCDataOuterClass.CyberRCMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cyberrc.RCDataOuterClass.CyberRCMessage other) {
        if (other == cyberrc.RCDataOuterClass.CyberRCMessage.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                payload_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>.cyberrc.CyberRCMessage.MessageType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.cyberrc.CyberRCMessage.MessageType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.cyberrc.CyberRCMessage.MessageType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public cyberrc.RCDataOuterClass.CyberRCMessage.MessageType getType() {
        cyberrc.RCDataOuterClass.CyberRCMessage.MessageType result = cyberrc.RCDataOuterClass.CyberRCMessage.MessageType.forNumber(type_);
        return result == null ? cyberrc.RCDataOuterClass.CyberRCMessage.MessageType.UNRECOGNIZED : result;
      }
      /**
       * <code>.cyberrc.CyberRCMessage.MessageType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(cyberrc.RCDataOuterClass.CyberRCMessage.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.cyberrc.CyberRCMessage.MessageType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes payload = 2;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <code>bytes payload = 2;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        payload_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bytes payload = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000002);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cyberrc.CyberRCMessage)
    }

    // @@protoc_insertion_point(class_scope:cyberrc.CyberRCMessage)
    private static final cyberrc.RCDataOuterClass.CyberRCMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cyberrc.RCDataOuterClass.CyberRCMessage();
    }

    public static cyberrc.RCDataOuterClass.CyberRCMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CyberRCMessage>
        PARSER = new com.google.protobuf.AbstractParser<CyberRCMessage>() {
      @java.lang.Override
      public CyberRCMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CyberRCMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CyberRCMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cyberrc.RCDataOuterClass.CyberRCMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RCDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cyberrc.RCData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 Aileron = 1;</code>
     * @return The aileron.
     */
    int getAileron();

    /**
     * <code>int32 Elevator = 2;</code>
     * @return The elevator.
     */
    int getElevator();

    /**
     * <code>int32 Throttle = 3;</code>
     * @return The throttle.
     */
    int getThrottle();

    /**
     * <code>int32 Rudder = 4;</code>
     * @return The rudder.
     */
    int getRudder();

    /**
     * <code>int32 Arm = 5;</code>
     * @return The arm.
     */
    int getArm();

    /**
     * <code>int32 Mode = 6;</code>
     * @return The mode.
     */
    int getMode();
  }
  /**
   * <pre>
   * Message definition for RC data
   * </pre>
   *
   * Protobuf type {@code cyberrc.RCData}
   */
  public static final class RCData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cyberrc.RCData)
      RCDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        RCData.class.getName());
    }
    // Use RCData.newBuilder() to construct.
    private RCData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RCData() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cyberrc.RCDataOuterClass.internal_static_cyberrc_RCData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cyberrc.RCDataOuterClass.internal_static_cyberrc_RCData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cyberrc.RCDataOuterClass.RCData.class, cyberrc.RCDataOuterClass.RCData.Builder.class);
    }

    public static final int AILERON_FIELD_NUMBER = 1;
    private int aileron_ = 0;
    /**
     * <code>int32 Aileron = 1;</code>
     * @return The aileron.
     */
    @java.lang.Override
    public int getAileron() {
      return aileron_;
    }

    public static final int ELEVATOR_FIELD_NUMBER = 2;
    private int elevator_ = 0;
    /**
     * <code>int32 Elevator = 2;</code>
     * @return The elevator.
     */
    @java.lang.Override
    public int getElevator() {
      return elevator_;
    }

    public static final int THROTTLE_FIELD_NUMBER = 3;
    private int throttle_ = 0;
    /**
     * <code>int32 Throttle = 3;</code>
     * @return The throttle.
     */
    @java.lang.Override
    public int getThrottle() {
      return throttle_;
    }

    public static final int RUDDER_FIELD_NUMBER = 4;
    private int rudder_ = 0;
    /**
     * <code>int32 Rudder = 4;</code>
     * @return The rudder.
     */
    @java.lang.Override
    public int getRudder() {
      return rudder_;
    }

    public static final int ARM_FIELD_NUMBER = 5;
    private int arm_ = 0;
    /**
     * <code>int32 Arm = 5;</code>
     * @return The arm.
     */
    @java.lang.Override
    public int getArm() {
      return arm_;
    }

    public static final int MODE_FIELD_NUMBER = 6;
    private int mode_ = 0;
    /**
     * <code>int32 Mode = 6;</code>
     * @return The mode.
     */
    @java.lang.Override
    public int getMode() {
      return mode_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (aileron_ != 0) {
        output.writeInt32(1, aileron_);
      }
      if (elevator_ != 0) {
        output.writeInt32(2, elevator_);
      }
      if (throttle_ != 0) {
        output.writeInt32(3, throttle_);
      }
      if (rudder_ != 0) {
        output.writeInt32(4, rudder_);
      }
      if (arm_ != 0) {
        output.writeInt32(5, arm_);
      }
      if (mode_ != 0) {
        output.writeInt32(6, mode_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (aileron_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, aileron_);
      }
      if (elevator_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, elevator_);
      }
      if (throttle_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, throttle_);
      }
      if (rudder_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rudder_);
      }
      if (arm_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, arm_);
      }
      if (mode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, mode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cyberrc.RCDataOuterClass.RCData)) {
        return super.equals(obj);
      }
      cyberrc.RCDataOuterClass.RCData other = (cyberrc.RCDataOuterClass.RCData) obj;

      if (getAileron()
          != other.getAileron()) return false;
      if (getElevator()
          != other.getElevator()) return false;
      if (getThrottle()
          != other.getThrottle()) return false;
      if (getRudder()
          != other.getRudder()) return false;
      if (getArm()
          != other.getArm()) return false;
      if (getMode()
          != other.getMode()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AILERON_FIELD_NUMBER;
      hash = (53 * hash) + getAileron();
      hash = (37 * hash) + ELEVATOR_FIELD_NUMBER;
      hash = (53 * hash) + getElevator();
      hash = (37 * hash) + THROTTLE_FIELD_NUMBER;
      hash = (53 * hash) + getThrottle();
      hash = (37 * hash) + RUDDER_FIELD_NUMBER;
      hash = (53 * hash) + getRudder();
      hash = (37 * hash) + ARM_FIELD_NUMBER;
      hash = (53 * hash) + getArm();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + getMode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cyberrc.RCDataOuterClass.RCData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cyberrc.RCDataOuterClass.RCData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.RCData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cyberrc.RCDataOuterClass.RCData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.RCData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cyberrc.RCDataOuterClass.RCData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.RCData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cyberrc.RCDataOuterClass.RCData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cyberrc.RCDataOuterClass.RCData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cyberrc.RCDataOuterClass.RCData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.RCData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cyberrc.RCDataOuterClass.RCData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cyberrc.RCDataOuterClass.RCData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message definition for RC data
     * </pre>
     *
     * Protobuf type {@code cyberrc.RCData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cyberrc.RCData)
        cyberrc.RCDataOuterClass.RCDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cyberrc.RCDataOuterClass.internal_static_cyberrc_RCData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cyberrc.RCDataOuterClass.internal_static_cyberrc_RCData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cyberrc.RCDataOuterClass.RCData.class, cyberrc.RCDataOuterClass.RCData.Builder.class);
      }

      // Construct using cyberrc.RCDataOuterClass.RCData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        aileron_ = 0;
        elevator_ = 0;
        throttle_ = 0;
        rudder_ = 0;
        arm_ = 0;
        mode_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cyberrc.RCDataOuterClass.internal_static_cyberrc_RCData_descriptor;
      }

      @java.lang.Override
      public cyberrc.RCDataOuterClass.RCData getDefaultInstanceForType() {
        return cyberrc.RCDataOuterClass.RCData.getDefaultInstance();
      }

      @java.lang.Override
      public cyberrc.RCDataOuterClass.RCData build() {
        cyberrc.RCDataOuterClass.RCData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cyberrc.RCDataOuterClass.RCData buildPartial() {
        cyberrc.RCDataOuterClass.RCData result = new cyberrc.RCDataOuterClass.RCData(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(cyberrc.RCDataOuterClass.RCData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.aileron_ = aileron_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.elevator_ = elevator_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.throttle_ = throttle_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.rudder_ = rudder_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.arm_ = arm_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.mode_ = mode_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cyberrc.RCDataOuterClass.RCData) {
          return mergeFrom((cyberrc.RCDataOuterClass.RCData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cyberrc.RCDataOuterClass.RCData other) {
        if (other == cyberrc.RCDataOuterClass.RCData.getDefaultInstance()) return this;
        if (other.getAileron() != 0) {
          setAileron(other.getAileron());
        }
        if (other.getElevator() != 0) {
          setElevator(other.getElevator());
        }
        if (other.getThrottle() != 0) {
          setThrottle(other.getThrottle());
        }
        if (other.getRudder() != 0) {
          setRudder(other.getRudder());
        }
        if (other.getArm() != 0) {
          setArm(other.getArm());
        }
        if (other.getMode() != 0) {
          setMode(other.getMode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                aileron_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                elevator_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                throttle_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                rudder_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                arm_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                mode_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int aileron_ ;
      /**
       * <code>int32 Aileron = 1;</code>
       * @return The aileron.
       */
      @java.lang.Override
      public int getAileron() {
        return aileron_;
      }
      /**
       * <code>int32 Aileron = 1;</code>
       * @param value The aileron to set.
       * @return This builder for chaining.
       */
      public Builder setAileron(int value) {

        aileron_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 Aileron = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAileron() {
        bitField0_ = (bitField0_ & ~0x00000001);
        aileron_ = 0;
        onChanged();
        return this;
      }

      private int elevator_ ;
      /**
       * <code>int32 Elevator = 2;</code>
       * @return The elevator.
       */
      @java.lang.Override
      public int getElevator() {
        return elevator_;
      }
      /**
       * <code>int32 Elevator = 2;</code>
       * @param value The elevator to set.
       * @return This builder for chaining.
       */
      public Builder setElevator(int value) {

        elevator_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 Elevator = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearElevator() {
        bitField0_ = (bitField0_ & ~0x00000002);
        elevator_ = 0;
        onChanged();
        return this;
      }

      private int throttle_ ;
      /**
       * <code>int32 Throttle = 3;</code>
       * @return The throttle.
       */
      @java.lang.Override
      public int getThrottle() {
        return throttle_;
      }
      /**
       * <code>int32 Throttle = 3;</code>
       * @param value The throttle to set.
       * @return This builder for chaining.
       */
      public Builder setThrottle(int value) {

        throttle_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 Throttle = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearThrottle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        throttle_ = 0;
        onChanged();
        return this;
      }

      private int rudder_ ;
      /**
       * <code>int32 Rudder = 4;</code>
       * @return The rudder.
       */
      @java.lang.Override
      public int getRudder() {
        return rudder_;
      }
      /**
       * <code>int32 Rudder = 4;</code>
       * @param value The rudder to set.
       * @return This builder for chaining.
       */
      public Builder setRudder(int value) {

        rudder_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 Rudder = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRudder() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rudder_ = 0;
        onChanged();
        return this;
      }

      private int arm_ ;
      /**
       * <code>int32 Arm = 5;</code>
       * @return The arm.
       */
      @java.lang.Override
      public int getArm() {
        return arm_;
      }
      /**
       * <code>int32 Arm = 5;</code>
       * @param value The arm to set.
       * @return This builder for chaining.
       */
      public Builder setArm(int value) {

        arm_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 Arm = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearArm() {
        bitField0_ = (bitField0_ & ~0x00000010);
        arm_ = 0;
        onChanged();
        return this;
      }

      private int mode_ ;
      /**
       * <code>int32 Mode = 6;</code>
       * @return The mode.
       */
      @java.lang.Override
      public int getMode() {
        return mode_;
      }
      /**
       * <code>int32 Mode = 6;</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(int value) {

        mode_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 Mode = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cyberrc.RCData)
    }

    // @@protoc_insertion_point(class_scope:cyberrc.RCData)
    private static final cyberrc.RCDataOuterClass.RCData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cyberrc.RCDataOuterClass.RCData();
    }

    public static cyberrc.RCDataOuterClass.RCData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RCData>
        PARSER = new com.google.protobuf.AbstractParser<RCData>() {
      @java.lang.Override
      public RCData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RCData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RCData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cyberrc.RCDataOuterClass.RCData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PPMUpdateAllOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cyberrc.PPMUpdateAll)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 line = 1;</code>
     * @return The line.
     */
    int getLine();

    /**
     * <code>repeated int32 channel_values = 2 [packed = true];</code>
     * @return A list containing the channelValues.
     */
    java.util.List<java.lang.Integer> getChannelValuesList();
    /**
     * <code>repeated int32 channel_values = 2 [packed = true];</code>
     * @return The count of channelValues.
     */
    int getChannelValuesCount();
    /**
     * <code>repeated int32 channel_values = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The channelValues at the given index.
     */
    int getChannelValues(int index);
  }
  /**
   * Protobuf type {@code cyberrc.PPMUpdateAll}
   */
  public static final class PPMUpdateAll extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cyberrc.PPMUpdateAll)
      PPMUpdateAllOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        PPMUpdateAll.class.getName());
    }
    // Use PPMUpdateAll.newBuilder() to construct.
    private PPMUpdateAll(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PPMUpdateAll() {
      channelValues_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cyberrc.RCDataOuterClass.internal_static_cyberrc_PPMUpdateAll_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cyberrc.RCDataOuterClass.internal_static_cyberrc_PPMUpdateAll_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cyberrc.RCDataOuterClass.PPMUpdateAll.class, cyberrc.RCDataOuterClass.PPMUpdateAll.Builder.class);
    }

    public static final int LINE_FIELD_NUMBER = 1;
    private int line_ = 0;
    /**
     * <code>int32 line = 1;</code>
     * @return The line.
     */
    @java.lang.Override
    public int getLine() {
      return line_;
    }

    public static final int CHANNEL_VALUES_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList channelValues_ =
        emptyIntList();
    /**
     * <code>repeated int32 channel_values = 2 [packed = true];</code>
     * @return A list containing the channelValues.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getChannelValuesList() {
      return channelValues_;
    }
    /**
     * <code>repeated int32 channel_values = 2 [packed = true];</code>
     * @return The count of channelValues.
     */
    public int getChannelValuesCount() {
      return channelValues_.size();
    }
    /**
     * <code>repeated int32 channel_values = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The channelValues at the given index.
     */
    public int getChannelValues(int index) {
      return channelValues_.getInt(index);
    }
    private int channelValuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (line_ != 0) {
        output.writeInt32(1, line_);
      }
      if (getChannelValuesList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(channelValuesMemoizedSerializedSize);
      }
      for (int i = 0; i < channelValues_.size(); i++) {
        output.writeInt32NoTag(channelValues_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (line_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, line_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < channelValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(channelValues_.getInt(i));
        }
        size += dataSize;
        if (!getChannelValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        channelValuesMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cyberrc.RCDataOuterClass.PPMUpdateAll)) {
        return super.equals(obj);
      }
      cyberrc.RCDataOuterClass.PPMUpdateAll other = (cyberrc.RCDataOuterClass.PPMUpdateAll) obj;

      if (getLine()
          != other.getLine()) return false;
      if (!getChannelValuesList()
          .equals(other.getChannelValuesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LINE_FIELD_NUMBER;
      hash = (53 * hash) + getLine();
      if (getChannelValuesCount() > 0) {
        hash = (37 * hash) + CHANNEL_VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getChannelValuesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cyberrc.RCDataOuterClass.PPMUpdateAll parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cyberrc.RCDataOuterClass.PPMUpdateAll prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cyberrc.PPMUpdateAll}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cyberrc.PPMUpdateAll)
        cyberrc.RCDataOuterClass.PPMUpdateAllOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cyberrc.RCDataOuterClass.internal_static_cyberrc_PPMUpdateAll_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cyberrc.RCDataOuterClass.internal_static_cyberrc_PPMUpdateAll_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cyberrc.RCDataOuterClass.PPMUpdateAll.class, cyberrc.RCDataOuterClass.PPMUpdateAll.Builder.class);
      }

      // Construct using cyberrc.RCDataOuterClass.PPMUpdateAll.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        line_ = 0;
        channelValues_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cyberrc.RCDataOuterClass.internal_static_cyberrc_PPMUpdateAll_descriptor;
      }

      @java.lang.Override
      public cyberrc.RCDataOuterClass.PPMUpdateAll getDefaultInstanceForType() {
        return cyberrc.RCDataOuterClass.PPMUpdateAll.getDefaultInstance();
      }

      @java.lang.Override
      public cyberrc.RCDataOuterClass.PPMUpdateAll build() {
        cyberrc.RCDataOuterClass.PPMUpdateAll result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cyberrc.RCDataOuterClass.PPMUpdateAll buildPartial() {
        cyberrc.RCDataOuterClass.PPMUpdateAll result = new cyberrc.RCDataOuterClass.PPMUpdateAll(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(cyberrc.RCDataOuterClass.PPMUpdateAll result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.line_ = line_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          channelValues_.makeImmutable();
          result.channelValues_ = channelValues_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cyberrc.RCDataOuterClass.PPMUpdateAll) {
          return mergeFrom((cyberrc.RCDataOuterClass.PPMUpdateAll)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cyberrc.RCDataOuterClass.PPMUpdateAll other) {
        if (other == cyberrc.RCDataOuterClass.PPMUpdateAll.getDefaultInstance()) return this;
        if (other.getLine() != 0) {
          setLine(other.getLine());
        }
        if (!other.channelValues_.isEmpty()) {
          if (channelValues_.isEmpty()) {
            channelValues_ = other.channelValues_;
            channelValues_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureChannelValuesIsMutable();
            channelValues_.addAll(other.channelValues_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                line_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                int v = input.readInt32();
                ensureChannelValuesIsMutable();
                channelValues_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureChannelValuesIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  channelValues_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int line_ ;
      /**
       * <code>int32 line = 1;</code>
       * @return The line.
       */
      @java.lang.Override
      public int getLine() {
        return line_;
      }
      /**
       * <code>int32 line = 1;</code>
       * @param value The line to set.
       * @return This builder for chaining.
       */
      public Builder setLine(int value) {

        line_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 line = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLine() {
        bitField0_ = (bitField0_ & ~0x00000001);
        line_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList channelValues_ = emptyIntList();
      private void ensureChannelValuesIsMutable() {
        if (!channelValues_.isModifiable()) {
          channelValues_ = makeMutableCopy(channelValues_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated int32 channel_values = 2 [packed = true];</code>
       * @return A list containing the channelValues.
       */
      public java.util.List<java.lang.Integer>
          getChannelValuesList() {
        channelValues_.makeImmutable();
        return channelValues_;
      }
      /**
       * <code>repeated int32 channel_values = 2 [packed = true];</code>
       * @return The count of channelValues.
       */
      public int getChannelValuesCount() {
        return channelValues_.size();
      }
      /**
       * <code>repeated int32 channel_values = 2 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The channelValues at the given index.
       */
      public int getChannelValues(int index) {
        return channelValues_.getInt(index);
      }
      /**
       * <code>repeated int32 channel_values = 2 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The channelValues to set.
       * @return This builder for chaining.
       */
      public Builder setChannelValues(
          int index, int value) {

        ensureChannelValuesIsMutable();
        channelValues_.setInt(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 channel_values = 2 [packed = true];</code>
       * @param value The channelValues to add.
       * @return This builder for chaining.
       */
      public Builder addChannelValues(int value) {

        ensureChannelValuesIsMutable();
        channelValues_.addInt(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 channel_values = 2 [packed = true];</code>
       * @param values The channelValues to add.
       * @return This builder for chaining.
       */
      public Builder addAllChannelValues(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChannelValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, channelValues_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 channel_values = 2 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelValues() {
        channelValues_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cyberrc.PPMUpdateAll)
    }

    // @@protoc_insertion_point(class_scope:cyberrc.PPMUpdateAll)
    private static final cyberrc.RCDataOuterClass.PPMUpdateAll DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cyberrc.RCDataOuterClass.PPMUpdateAll();
    }

    public static cyberrc.RCDataOuterClass.PPMUpdateAll getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PPMUpdateAll>
        PARSER = new com.google.protobuf.AbstractParser<PPMUpdateAll>() {
      @java.lang.Override
      public PPMUpdateAll parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PPMUpdateAll> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PPMUpdateAll> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cyberrc.RCDataOuterClass.PPMUpdateAll getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cyberrc_CyberRCMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cyberrc_CyberRCMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cyberrc_RCData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cyberrc_RCData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cyberrc_PPMUpdateAll_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cyberrc_PPMUpdateAll_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014RCData.proto\022\007cyberrc\"~\n\016CyberRCMessag" +
      "e\0221\n\004type\030\001 \001(\0162#.cyberrc.CyberRCMessage" +
      ".MessageType\022\017\n\007payload\030\002 \001(\014\"(\n\013Message" +
      "Type\022\r\n\tPPMUpdate\020\000\022\n\n\006RCData\020\001\"h\n\006RCDat" +
      "a\022\017\n\007Aileron\030\001 \001(\005\022\020\n\010Elevator\030\002 \001(\005\022\020\n\010" +
      "Throttle\030\003 \001(\005\022\016\n\006Rudder\030\004 \001(\005\022\013\n\003Arm\030\005 " +
      "\001(\005\022\014\n\004Mode\030\006 \001(\005\"8\n\014PPMUpdateAll\022\014\n\004lin" +
      "e\030\001 \001(\005\022\032\n\016channel_values\030\002 \003(\005B\002\020\001B.Z,g" +
      "ithub.com/friend0/cybertx/clients/gocybe" +
      "rtxb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_cyberrc_CyberRCMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cyberrc_CyberRCMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cyberrc_CyberRCMessage_descriptor,
        new java.lang.String[] { "Type", "Payload", });
    internal_static_cyberrc_RCData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cyberrc_RCData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cyberrc_RCData_descriptor,
        new java.lang.String[] { "Aileron", "Elevator", "Throttle", "Rudder", "Arm", "Mode", });
    internal_static_cyberrc_PPMUpdateAll_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_cyberrc_PPMUpdateAll_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cyberrc_PPMUpdateAll_descriptor,
        new java.lang.String[] { "Line", "ChannelValues", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
