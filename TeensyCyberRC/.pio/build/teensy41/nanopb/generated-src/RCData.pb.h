/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_CYBERRC_RCDATA_PB_H_INCLUDED
#define PB_CYBERRC_RCDATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Message definition for RC data */
typedef struct _cyberrc_RCData {
    int32_t Aileron;
    int32_t Elevator;
    int32_t Throttle;
    int32_t Rudder;
    int32_t Arm;
    int32_t Mode;
} cyberrc_RCData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define cyberrc_RCData_init_default              {0, 0, 0, 0, 0, 0}
#define cyberrc_RCData_init_zero                 {0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define cyberrc_RCData_Aileron_tag               1
#define cyberrc_RCData_Elevator_tag              2
#define cyberrc_RCData_Throttle_tag              3
#define cyberrc_RCData_Rudder_tag                4
#define cyberrc_RCData_Arm_tag                   5
#define cyberrc_RCData_Mode_tag                  6

/* Struct field encoding specification for nanopb */
#define cyberrc_RCData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    Aileron,           1) \
X(a, STATIC,   SINGULAR, INT32,    Elevator,          2) \
X(a, STATIC,   SINGULAR, INT32,    Throttle,          3) \
X(a, STATIC,   SINGULAR, INT32,    Rudder,            4) \
X(a, STATIC,   SINGULAR, INT32,    Arm,               5) \
X(a, STATIC,   SINGULAR, INT32,    Mode,              6)
#define cyberrc_RCData_CALLBACK NULL
#define cyberrc_RCData_DEFAULT NULL

extern const pb_msgdesc_t cyberrc_RCData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cyberrc_RCData_fields &cyberrc_RCData_msg

/* Maximum encoded size of messages (where known) */
#define CYBERRC_RCDATA_PB_H_MAX_SIZE             cyberrc_RCData_size
#define cyberrc_RCData_size                      66

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
